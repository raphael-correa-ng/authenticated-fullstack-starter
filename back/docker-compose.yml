services:
  mysqldb:
    image: mysql:8.0.22
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: example
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - spring-boot-mysql-network

  spring-boot-auth-service:
    container_name: fullstack-starter-auth-service
    build:
      context: .
      dockerfile: DockerfileWithDependency
      args:
        DEPENDENCY: auth-api
        SERVICE: auth-service
    ports:
      - "8080:8080"
    depends_on:
      - mysqldb
    networks:
      - spring-boot-mysql-network
    restart: on-failure
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/my-service?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true

  spring-boot-my-service:
    container_name: fullstack-starter-my-service
    build:
      context: .
      dockerfile: DockerfileWithDependency
      args:
        DEPENDENCY: auth-api
        SERVICE: my-service
    ports:
      - "8081:8081"
    depends_on:
      - mysqldb
      - spring-boot-auth-service
    networks:
      - spring-boot-mysql-network
    restart: on-failure
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/my-service?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
      SERVICES_AUTH_BASE_URL: http://spring-boot-auth-service:8080

volumes:
  mysql-data:

networks:
  spring-boot-mysql-network: